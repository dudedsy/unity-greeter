# Makefile.in generated by automake 1.15 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# -*- Mode: Automake; indent-tabs-mode: t; tab-width: 4 -*-


am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/unity-greeter
pkgincludedir = $(includedir)/unity-greeter
pkglibdir = $(libdir)/unity-greeter
pkglibexecdir = $(libexecdir)/unity-greeter
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
sbin_PROGRAMS = unity-greeter$(EXEEXT)
noinst_PROGRAMS = logo-generator$(EXEEXT)
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/intltool.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(sbindir)"
PROGRAMS = $(noinst_PROGRAMS) $(sbin_PROGRAMS)
am_logo_generator_OBJECTS = logo_generator-logo-generator.$(OBJEXT)
logo_generator_OBJECTS = $(am_logo_generator_OBJECTS)
am__DEPENDENCIES_1 =
am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1)
logo_generator_DEPENDENCIES = $(am__DEPENDENCIES_2)
logo_generator_LINK = $(CCLD) $(logo_generator_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_unity_greeter_OBJECTS = unity_greeter-animate-timer.$(OBJEXT) \
	unity_greeter-background.$(OBJEXT) \
	unity_greeter-cached-image.$(OBJEXT) \
	unity_greeter-cairo-utils.$(OBJEXT) \
	unity_greeter-email-autocompleter.$(OBJEXT) \
	unity_greeter-dash-box.$(OBJEXT) \
	unity_greeter-dash-button.$(OBJEXT) \
	unity_greeter-dash-entry.$(OBJEXT) \
	unity_greeter-fadable.$(OBJEXT) \
	unity_greeter-fadable-box.$(OBJEXT) \
	unity_greeter-fading-label.$(OBJEXT) \
	unity_greeter-flat-button.$(OBJEXT) \
	unity_greeter-greeter-list.$(OBJEXT) \
	unity_greeter-idle-monitor.$(OBJEXT) \
	unity_greeter-list-stack.$(OBJEXT) \
	unity_greeter-main-window.$(OBJEXT) \
	unity_greeter-menu.$(OBJEXT) unity_greeter-menubar.$(OBJEXT) \
	unity_greeter-prompt-box.$(OBJEXT) \
	unity_greeter-session-list.$(OBJEXT) \
	unity_greeter-remote-login-service.$(OBJEXT) \
	unity_greeter-settings.$(OBJEXT) \
	unity_greeter-settings-daemon.$(OBJEXT) \
	unity_greeter-shutdown-dialog.$(OBJEXT) \
	unity_greeter-toggle-box.$(OBJEXT) \
	unity_greeter-unity-greeter.$(OBJEXT) \
	unity_greeter-user-list.$(OBJEXT) \
	unity_greeter-user-prompt-box.$(OBJEXT)
unity_greeter_OBJECTS = $(am_unity_greeter_OBJECTS)
unity_greeter_DEPENDENCIES = $(am__DEPENDENCIES_1)
unity_greeter_LINK = $(CCLD) $(unity_greeter_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
VALACOMPILE = $(VALAC) $(AM_VALAFLAGS) $(VALAFLAGS)
AM_V_VALAC = $(am__v_VALAC_$(V))
am__v_VALAC_ = $(am__v_VALAC_$(AM_DEFAULT_VERBOSITY))
am__v_VALAC_0 = @echo "  VALAC   " $@;
am__v_VALAC_1 = 
SOURCES = $(logo_generator_SOURCES) $(unity_greeter_SOURCES)
DIST_SOURCES = $(logo_generator_SOURCES) $(unity_greeter_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in \
	$(srcdir)/logo_generator_vala.stamp \
	$(srcdir)/unity_greeter_vala.stamp $(top_srcdir)/depcomp \
	animate-timer.c background.c cached-image.c cairo-utils.c \
	dash-box.c dash-button.c dash-entry.c email-autocompleter.c \
	fadable-box.c fadable.c fading-label.c flat-button.c \
	greeter-list.c idle-monitor.c list-stack.c logo-generator.c \
	main-window.c menu.c menubar.c prompt-box.c \
	remote-login-service.c session-list.c settings-daemon.c \
	settings.c shutdown-dialog.c toggle-box.c unity-greeter.c \
	user-list.c user-prompt-box.c
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/brian/greeter/unity-greeter-og/missing aclocal-1.15
ALL_LINGUAS = 
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AUTOCONF = ${SHELL} /home/brian/greeter/unity-greeter-og/missing autoconf
AUTOHEADER = ${SHELL} /home/brian/greeter/unity-greeter-og/missing autoheader
AUTOMAKE = ${SHELL} /home/brian/greeter/unity-greeter-og/missing automake-1.15
AWK = mawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPPFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EXEEXT = 
GETTEXT_PACKAGE = unity-greeter
GLIB_COMPILE_SCHEMAS = /usr/lib/x86_64-linux-gnu/glib-2.0/glib-compile-schemas
GMSGFMT = /usr/bin/msgfmt
GSETTINGS_DISABLE_SCHEMAS_COMPILE = 
INDICATORDIR = /usr/lib/indicators3/7/
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INTLTOOL_EXTRACT = /usr/bin/intltool-extract
INTLTOOL_MERGE = /usr/bin/intltool-merge
INTLTOOL_PERL = /usr/bin/perl
INTLTOOL_UPDATE = /usr/bin/intltool-update
INTLTOOL_V_MERGE = $(INTLTOOL__v_MERGE_$(V))
INTLTOOL_V_MERGE_OPTIONS = $(intltool__v_merge_options_$(V))
INTLTOOL__v_MERGE_ = $(INTLTOOL__v_MERGE_$(AM_DEFAULT_VERBOSITY))
INTLTOOL__v_MERGE_0 = @echo "  ITMRG " $@;
LDFLAGS = 
LIBOBJS = 
LIBS = 
LTLIBOBJS = 
MAINT = 
MAKEINFO = ${SHELL} /home/brian/greeter/unity-greeter-og/missing makeinfo
MKDIR_P = /bin/mkdir -p
MSGFMT = /usr/bin/msgfmt
MSGMERGE = /usr/bin/msgmerge
OBJEXT = o
PACKAGE = unity-greeter
PACKAGE_BUGREPORT = 
PACKAGE_NAME = unity-greeter
PACKAGE_STRING = unity-greeter 16.04.2
PACKAGE_TARNAME = unity-greeter
PACKAGE_URL = 
PACKAGE_VERSION = 16.04.2
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
UNITY_GREETER_CFLAGS = -pthread -D_REENTRANT -I/usr/include/gtk-3.0 -I/usr/include/libindicator3-0.4 -I/usr/include/libido3-0.1 -I/usr/include/gtk-3.0 -I/usr/include/at-spi2-atk/2.0 -I/usr/include/at-spi-2.0 -I/usr/include/dbus-1.0 -I/usr/lib/x86_64-linux-gnu/dbus-1.0/include -I/usr/include/gtk-3.0 -I/usr/include/mirclient -I/usr/include/mircore -I/usr/include/mircookie -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/harfbuzz -I/usr/include/pango-1.0 -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/libpng12 -I/usr/include/lightdm-gobject-1 -I/usr/include/gio-unix-2.0/ -I/usr/include/libxml2 -I/usr/include/cairo -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/freetype2 -I/usr/include/libpng12 -I/usr/include/freetype2 -I/usr/include/pixman-1
UNITY_GREETER_LIBS = -lgdk-3 -lindicator3 -lido3-0.1 -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0 -llightdm-gobject-1 -lcairo -lfreetype -lcanberra -lpixman-1 -lX11 -lXext
USE_NLS = yes
VALAC = /usr/bin/valac
VERSION = 16.04.2
XGETTEXT = /usr/bin/xgettext
abs_builddir = /home/brian/greeter/unity-greeter-og/src
abs_srcdir = /home/brian/greeter/unity-greeter-og/src
abs_top_builddir = /home/brian/greeter/unity-greeter-og
abs_top_srcdir = /home/brian/greeter/unity-greeter-og
ac_ct_CC = gcc
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build_alias = 
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
gsettingsschemadir = ${datarootdir}/glib-2.0/schemas
host_alias = 
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/brian/greeter/unity-greeter-og/install-sh
intltool__v_merge_options_ = $(intltool__v_merge_options_$(AM_DEFAULT_VERBOSITY))
intltool__v_merge_options_0 = -q
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
unity_greeter_SOURCES = \
	config.vapi \
	fixes.vapi \
	indicator.vapi \
	xsync.vapi \
	animate-timer.vala \
	background.vala \
	cached-image.vala \
	cairo-utils.vala \
	email-autocompleter.vala \
	dash-box.vala \
	dash-button.vala \
	dash-entry.vala \
	fadable.vala \
	fadable-box.vala \
	fading-label.vala \
	flat-button.vala \
	greeter-list.vala \
	idle-monitor.vala \
	list-stack.vala \
	main-window.vala \
	menu.vala \
	menubar.vala \
	prompt-box.vala \
	session-list.vala \
	remote-login-service.vala \
	settings.vala \
	settings-daemon.vala \
	shutdown-dialog.vala \
	toggle-box.vala \
	unity-greeter.vala \
	user-list.vala \
	user-prompt-box.vala

logo_generator_SOURCES = logo-generator.vala
unity_greeter_CFLAGS = \
	$(UNITY_GREETER_CFLAGS) \
	-w \
	-DGETTEXT_PACKAGE=\"$(GETTEXT_PACKAGE)\" \
	-DLOCALEDIR=\""$(localedir)"\" \
	-DVERSION=\"$(VERSION)\" \
	-DPKGDATADIR=\""$(pkgdatadir)"\" \
	-DINDICATORDIR=\""$(INDICATORDIR)"\"

logo_generator_CFLAGS = $(unity_greeter_CFLAGS)
unity_greeter_VALAFLAGS = \
	--pkg posix \
	--pkg gtk+-3.0 \
	--pkg gdk-x11-3.0 \
	--pkg gio-unix-2.0 \
	--pkg x11 \
	--pkg liblightdm-gobject-1 \
	--pkg libcanberra \
	--pkg gio-2.0 \
	--pkg pixman-1 \
	--target-glib 2.32

logo_generator_VALAFLAGS = $(unity_greeter_VALAFLAGS)
unity_greeter_LDADD = \
	$(UNITY_GREETER_LIBS) \
	-lm

logo_generator_LDADD = $(unity_greeter_LDADD)
DISTCLEANFILES = \
	Makefile.in

all: all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)
install-sbinPROGRAMS: $(sbin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(sbin_PROGRAMS)'; test -n "$(sbindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(sbindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(sbindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(sbindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(sbindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-sbinPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(sbin_PROGRAMS)'; test -n "$(sbindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(sbindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(sbindir)" && rm -f $$files

clean-sbinPROGRAMS:
	-test -z "$(sbin_PROGRAMS)" || rm -f $(sbin_PROGRAMS)

logo-generator$(EXEEXT): $(logo_generator_OBJECTS) $(logo_generator_DEPENDENCIES) $(EXTRA_logo_generator_DEPENDENCIES) 
	@rm -f logo-generator$(EXEEXT)
	$(AM_V_CCLD)$(logo_generator_LINK) $(logo_generator_OBJECTS) $(logo_generator_LDADD) $(LIBS)

unity-greeter$(EXEEXT): $(unity_greeter_OBJECTS) $(unity_greeter_DEPENDENCIES) $(EXTRA_unity_greeter_DEPENDENCIES) 
	@rm -f unity-greeter$(EXEEXT)
	$(AM_V_CCLD)$(unity_greeter_LINK) $(unity_greeter_OBJECTS) $(unity_greeter_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/logo_generator-logo-generator.Po
include ./$(DEPDIR)/unity_greeter-animate-timer.Po
include ./$(DEPDIR)/unity_greeter-background.Po
include ./$(DEPDIR)/unity_greeter-cached-image.Po
include ./$(DEPDIR)/unity_greeter-cairo-utils.Po
include ./$(DEPDIR)/unity_greeter-dash-box.Po
include ./$(DEPDIR)/unity_greeter-dash-button.Po
include ./$(DEPDIR)/unity_greeter-dash-entry.Po
include ./$(DEPDIR)/unity_greeter-email-autocompleter.Po
include ./$(DEPDIR)/unity_greeter-fadable-box.Po
include ./$(DEPDIR)/unity_greeter-fadable.Po
include ./$(DEPDIR)/unity_greeter-fading-label.Po
include ./$(DEPDIR)/unity_greeter-flat-button.Po
include ./$(DEPDIR)/unity_greeter-greeter-list.Po
include ./$(DEPDIR)/unity_greeter-idle-monitor.Po
include ./$(DEPDIR)/unity_greeter-list-stack.Po
include ./$(DEPDIR)/unity_greeter-main-window.Po
include ./$(DEPDIR)/unity_greeter-menu.Po
include ./$(DEPDIR)/unity_greeter-menubar.Po
include ./$(DEPDIR)/unity_greeter-prompt-box.Po
include ./$(DEPDIR)/unity_greeter-remote-login-service.Po
include ./$(DEPDIR)/unity_greeter-session-list.Po
include ./$(DEPDIR)/unity_greeter-settings-daemon.Po
include ./$(DEPDIR)/unity_greeter-settings.Po
include ./$(DEPDIR)/unity_greeter-shutdown-dialog.Po
include ./$(DEPDIR)/unity_greeter-toggle-box.Po
include ./$(DEPDIR)/unity_greeter-unity-greeter.Po
include ./$(DEPDIR)/unity_greeter-user-list.Po
include ./$(DEPDIR)/unity_greeter-user-prompt-box.Po

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

logo_generator-logo-generator.o: logo-generator.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(logo_generator_CFLAGS) $(CFLAGS) -MT logo_generator-logo-generator.o -MD -MP -MF $(DEPDIR)/logo_generator-logo-generator.Tpo -c -o logo_generator-logo-generator.o `test -f 'logo-generator.c' || echo '$(srcdir)/'`logo-generator.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/logo_generator-logo-generator.Tpo $(DEPDIR)/logo_generator-logo-generator.Po
#	$(AM_V_CC)source='logo-generator.c' object='logo_generator-logo-generator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(logo_generator_CFLAGS) $(CFLAGS) -c -o logo_generator-logo-generator.o `test -f 'logo-generator.c' || echo '$(srcdir)/'`logo-generator.c

logo_generator-logo-generator.obj: logo-generator.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(logo_generator_CFLAGS) $(CFLAGS) -MT logo_generator-logo-generator.obj -MD -MP -MF $(DEPDIR)/logo_generator-logo-generator.Tpo -c -o logo_generator-logo-generator.obj `if test -f 'logo-generator.c'; then $(CYGPATH_W) 'logo-generator.c'; else $(CYGPATH_W) '$(srcdir)/logo-generator.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/logo_generator-logo-generator.Tpo $(DEPDIR)/logo_generator-logo-generator.Po
#	$(AM_V_CC)source='logo-generator.c' object='logo_generator-logo-generator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(logo_generator_CFLAGS) $(CFLAGS) -c -o logo_generator-logo-generator.obj `if test -f 'logo-generator.c'; then $(CYGPATH_W) 'logo-generator.c'; else $(CYGPATH_W) '$(srcdir)/logo-generator.c'; fi`

unity_greeter-animate-timer.o: animate-timer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -MT unity_greeter-animate-timer.o -MD -MP -MF $(DEPDIR)/unity_greeter-animate-timer.Tpo -c -o unity_greeter-animate-timer.o `test -f 'animate-timer.c' || echo '$(srcdir)/'`animate-timer.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/unity_greeter-animate-timer.Tpo $(DEPDIR)/unity_greeter-animate-timer.Po
#	$(AM_V_CC)source='animate-timer.c' object='unity_greeter-animate-timer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -c -o unity_greeter-animate-timer.o `test -f 'animate-timer.c' || echo '$(srcdir)/'`animate-timer.c

unity_greeter-animate-timer.obj: animate-timer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -MT unity_greeter-animate-timer.obj -MD -MP -MF $(DEPDIR)/unity_greeter-animate-timer.Tpo -c -o unity_greeter-animate-timer.obj `if test -f 'animate-timer.c'; then $(CYGPATH_W) 'animate-timer.c'; else $(CYGPATH_W) '$(srcdir)/animate-timer.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/unity_greeter-animate-timer.Tpo $(DEPDIR)/unity_greeter-animate-timer.Po
#	$(AM_V_CC)source='animate-timer.c' object='unity_greeter-animate-timer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -c -o unity_greeter-animate-timer.obj `if test -f 'animate-timer.c'; then $(CYGPATH_W) 'animate-timer.c'; else $(CYGPATH_W) '$(srcdir)/animate-timer.c'; fi`

unity_greeter-background.o: background.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -MT unity_greeter-background.o -MD -MP -MF $(DEPDIR)/unity_greeter-background.Tpo -c -o unity_greeter-background.o `test -f 'background.c' || echo '$(srcdir)/'`background.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/unity_greeter-background.Tpo $(DEPDIR)/unity_greeter-background.Po
#	$(AM_V_CC)source='background.c' object='unity_greeter-background.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -c -o unity_greeter-background.o `test -f 'background.c' || echo '$(srcdir)/'`background.c

unity_greeter-background.obj: background.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -MT unity_greeter-background.obj -MD -MP -MF $(DEPDIR)/unity_greeter-background.Tpo -c -o unity_greeter-background.obj `if test -f 'background.c'; then $(CYGPATH_W) 'background.c'; else $(CYGPATH_W) '$(srcdir)/background.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/unity_greeter-background.Tpo $(DEPDIR)/unity_greeter-background.Po
#	$(AM_V_CC)source='background.c' object='unity_greeter-background.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -c -o unity_greeter-background.obj `if test -f 'background.c'; then $(CYGPATH_W) 'background.c'; else $(CYGPATH_W) '$(srcdir)/background.c'; fi`

unity_greeter-cached-image.o: cached-image.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -MT unity_greeter-cached-image.o -MD -MP -MF $(DEPDIR)/unity_greeter-cached-image.Tpo -c -o unity_greeter-cached-image.o `test -f 'cached-image.c' || echo '$(srcdir)/'`cached-image.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/unity_greeter-cached-image.Tpo $(DEPDIR)/unity_greeter-cached-image.Po
#	$(AM_V_CC)source='cached-image.c' object='unity_greeter-cached-image.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -c -o unity_greeter-cached-image.o `test -f 'cached-image.c' || echo '$(srcdir)/'`cached-image.c

unity_greeter-cached-image.obj: cached-image.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -MT unity_greeter-cached-image.obj -MD -MP -MF $(DEPDIR)/unity_greeter-cached-image.Tpo -c -o unity_greeter-cached-image.obj `if test -f 'cached-image.c'; then $(CYGPATH_W) 'cached-image.c'; else $(CYGPATH_W) '$(srcdir)/cached-image.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/unity_greeter-cached-image.Tpo $(DEPDIR)/unity_greeter-cached-image.Po
#	$(AM_V_CC)source='cached-image.c' object='unity_greeter-cached-image.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -c -o unity_greeter-cached-image.obj `if test -f 'cached-image.c'; then $(CYGPATH_W) 'cached-image.c'; else $(CYGPATH_W) '$(srcdir)/cached-image.c'; fi`

unity_greeter-cairo-utils.o: cairo-utils.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -MT unity_greeter-cairo-utils.o -MD -MP -MF $(DEPDIR)/unity_greeter-cairo-utils.Tpo -c -o unity_greeter-cairo-utils.o `test -f 'cairo-utils.c' || echo '$(srcdir)/'`cairo-utils.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/unity_greeter-cairo-utils.Tpo $(DEPDIR)/unity_greeter-cairo-utils.Po
#	$(AM_V_CC)source='cairo-utils.c' object='unity_greeter-cairo-utils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -c -o unity_greeter-cairo-utils.o `test -f 'cairo-utils.c' || echo '$(srcdir)/'`cairo-utils.c

unity_greeter-cairo-utils.obj: cairo-utils.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -MT unity_greeter-cairo-utils.obj -MD -MP -MF $(DEPDIR)/unity_greeter-cairo-utils.Tpo -c -o unity_greeter-cairo-utils.obj `if test -f 'cairo-utils.c'; then $(CYGPATH_W) 'cairo-utils.c'; else $(CYGPATH_W) '$(srcdir)/cairo-utils.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/unity_greeter-cairo-utils.Tpo $(DEPDIR)/unity_greeter-cairo-utils.Po
#	$(AM_V_CC)source='cairo-utils.c' object='unity_greeter-cairo-utils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -c -o unity_greeter-cairo-utils.obj `if test -f 'cairo-utils.c'; then $(CYGPATH_W) 'cairo-utils.c'; else $(CYGPATH_W) '$(srcdir)/cairo-utils.c'; fi`

unity_greeter-email-autocompleter.o: email-autocompleter.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -MT unity_greeter-email-autocompleter.o -MD -MP -MF $(DEPDIR)/unity_greeter-email-autocompleter.Tpo -c -o unity_greeter-email-autocompleter.o `test -f 'email-autocompleter.c' || echo '$(srcdir)/'`email-autocompleter.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/unity_greeter-email-autocompleter.Tpo $(DEPDIR)/unity_greeter-email-autocompleter.Po
#	$(AM_V_CC)source='email-autocompleter.c' object='unity_greeter-email-autocompleter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -c -o unity_greeter-email-autocompleter.o `test -f 'email-autocompleter.c' || echo '$(srcdir)/'`email-autocompleter.c

unity_greeter-email-autocompleter.obj: email-autocompleter.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -MT unity_greeter-email-autocompleter.obj -MD -MP -MF $(DEPDIR)/unity_greeter-email-autocompleter.Tpo -c -o unity_greeter-email-autocompleter.obj `if test -f 'email-autocompleter.c'; then $(CYGPATH_W) 'email-autocompleter.c'; else $(CYGPATH_W) '$(srcdir)/email-autocompleter.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/unity_greeter-email-autocompleter.Tpo $(DEPDIR)/unity_greeter-email-autocompleter.Po
#	$(AM_V_CC)source='email-autocompleter.c' object='unity_greeter-email-autocompleter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -c -o unity_greeter-email-autocompleter.obj `if test -f 'email-autocompleter.c'; then $(CYGPATH_W) 'email-autocompleter.c'; else $(CYGPATH_W) '$(srcdir)/email-autocompleter.c'; fi`

unity_greeter-dash-box.o: dash-box.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -MT unity_greeter-dash-box.o -MD -MP -MF $(DEPDIR)/unity_greeter-dash-box.Tpo -c -o unity_greeter-dash-box.o `test -f 'dash-box.c' || echo '$(srcdir)/'`dash-box.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/unity_greeter-dash-box.Tpo $(DEPDIR)/unity_greeter-dash-box.Po
#	$(AM_V_CC)source='dash-box.c' object='unity_greeter-dash-box.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -c -o unity_greeter-dash-box.o `test -f 'dash-box.c' || echo '$(srcdir)/'`dash-box.c

unity_greeter-dash-box.obj: dash-box.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -MT unity_greeter-dash-box.obj -MD -MP -MF $(DEPDIR)/unity_greeter-dash-box.Tpo -c -o unity_greeter-dash-box.obj `if test -f 'dash-box.c'; then $(CYGPATH_W) 'dash-box.c'; else $(CYGPATH_W) '$(srcdir)/dash-box.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/unity_greeter-dash-box.Tpo $(DEPDIR)/unity_greeter-dash-box.Po
#	$(AM_V_CC)source='dash-box.c' object='unity_greeter-dash-box.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -c -o unity_greeter-dash-box.obj `if test -f 'dash-box.c'; then $(CYGPATH_W) 'dash-box.c'; else $(CYGPATH_W) '$(srcdir)/dash-box.c'; fi`

unity_greeter-dash-button.o: dash-button.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -MT unity_greeter-dash-button.o -MD -MP -MF $(DEPDIR)/unity_greeter-dash-button.Tpo -c -o unity_greeter-dash-button.o `test -f 'dash-button.c' || echo '$(srcdir)/'`dash-button.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/unity_greeter-dash-button.Tpo $(DEPDIR)/unity_greeter-dash-button.Po
#	$(AM_V_CC)source='dash-button.c' object='unity_greeter-dash-button.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -c -o unity_greeter-dash-button.o `test -f 'dash-button.c' || echo '$(srcdir)/'`dash-button.c

unity_greeter-dash-button.obj: dash-button.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -MT unity_greeter-dash-button.obj -MD -MP -MF $(DEPDIR)/unity_greeter-dash-button.Tpo -c -o unity_greeter-dash-button.obj `if test -f 'dash-button.c'; then $(CYGPATH_W) 'dash-button.c'; else $(CYGPATH_W) '$(srcdir)/dash-button.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/unity_greeter-dash-button.Tpo $(DEPDIR)/unity_greeter-dash-button.Po
#	$(AM_V_CC)source='dash-button.c' object='unity_greeter-dash-button.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -c -o unity_greeter-dash-button.obj `if test -f 'dash-button.c'; then $(CYGPATH_W) 'dash-button.c'; else $(CYGPATH_W) '$(srcdir)/dash-button.c'; fi`

unity_greeter-dash-entry.o: dash-entry.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -MT unity_greeter-dash-entry.o -MD -MP -MF $(DEPDIR)/unity_greeter-dash-entry.Tpo -c -o unity_greeter-dash-entry.o `test -f 'dash-entry.c' || echo '$(srcdir)/'`dash-entry.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/unity_greeter-dash-entry.Tpo $(DEPDIR)/unity_greeter-dash-entry.Po
#	$(AM_V_CC)source='dash-entry.c' object='unity_greeter-dash-entry.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -c -o unity_greeter-dash-entry.o `test -f 'dash-entry.c' || echo '$(srcdir)/'`dash-entry.c

unity_greeter-dash-entry.obj: dash-entry.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -MT unity_greeter-dash-entry.obj -MD -MP -MF $(DEPDIR)/unity_greeter-dash-entry.Tpo -c -o unity_greeter-dash-entry.obj `if test -f 'dash-entry.c'; then $(CYGPATH_W) 'dash-entry.c'; else $(CYGPATH_W) '$(srcdir)/dash-entry.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/unity_greeter-dash-entry.Tpo $(DEPDIR)/unity_greeter-dash-entry.Po
#	$(AM_V_CC)source='dash-entry.c' object='unity_greeter-dash-entry.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -c -o unity_greeter-dash-entry.obj `if test -f 'dash-entry.c'; then $(CYGPATH_W) 'dash-entry.c'; else $(CYGPATH_W) '$(srcdir)/dash-entry.c'; fi`

unity_greeter-fadable.o: fadable.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -MT unity_greeter-fadable.o -MD -MP -MF $(DEPDIR)/unity_greeter-fadable.Tpo -c -o unity_greeter-fadable.o `test -f 'fadable.c' || echo '$(srcdir)/'`fadable.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/unity_greeter-fadable.Tpo $(DEPDIR)/unity_greeter-fadable.Po
#	$(AM_V_CC)source='fadable.c' object='unity_greeter-fadable.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -c -o unity_greeter-fadable.o `test -f 'fadable.c' || echo '$(srcdir)/'`fadable.c

unity_greeter-fadable.obj: fadable.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -MT unity_greeter-fadable.obj -MD -MP -MF $(DEPDIR)/unity_greeter-fadable.Tpo -c -o unity_greeter-fadable.obj `if test -f 'fadable.c'; then $(CYGPATH_W) 'fadable.c'; else $(CYGPATH_W) '$(srcdir)/fadable.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/unity_greeter-fadable.Tpo $(DEPDIR)/unity_greeter-fadable.Po
#	$(AM_V_CC)source='fadable.c' object='unity_greeter-fadable.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -c -o unity_greeter-fadable.obj `if test -f 'fadable.c'; then $(CYGPATH_W) 'fadable.c'; else $(CYGPATH_W) '$(srcdir)/fadable.c'; fi`

unity_greeter-fadable-box.o: fadable-box.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -MT unity_greeter-fadable-box.o -MD -MP -MF $(DEPDIR)/unity_greeter-fadable-box.Tpo -c -o unity_greeter-fadable-box.o `test -f 'fadable-box.c' || echo '$(srcdir)/'`fadable-box.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/unity_greeter-fadable-box.Tpo $(DEPDIR)/unity_greeter-fadable-box.Po
#	$(AM_V_CC)source='fadable-box.c' object='unity_greeter-fadable-box.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -c -o unity_greeter-fadable-box.o `test -f 'fadable-box.c' || echo '$(srcdir)/'`fadable-box.c

unity_greeter-fadable-box.obj: fadable-box.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -MT unity_greeter-fadable-box.obj -MD -MP -MF $(DEPDIR)/unity_greeter-fadable-box.Tpo -c -o unity_greeter-fadable-box.obj `if test -f 'fadable-box.c'; then $(CYGPATH_W) 'fadable-box.c'; else $(CYGPATH_W) '$(srcdir)/fadable-box.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/unity_greeter-fadable-box.Tpo $(DEPDIR)/unity_greeter-fadable-box.Po
#	$(AM_V_CC)source='fadable-box.c' object='unity_greeter-fadable-box.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -c -o unity_greeter-fadable-box.obj `if test -f 'fadable-box.c'; then $(CYGPATH_W) 'fadable-box.c'; else $(CYGPATH_W) '$(srcdir)/fadable-box.c'; fi`

unity_greeter-fading-label.o: fading-label.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -MT unity_greeter-fading-label.o -MD -MP -MF $(DEPDIR)/unity_greeter-fading-label.Tpo -c -o unity_greeter-fading-label.o `test -f 'fading-label.c' || echo '$(srcdir)/'`fading-label.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/unity_greeter-fading-label.Tpo $(DEPDIR)/unity_greeter-fading-label.Po
#	$(AM_V_CC)source='fading-label.c' object='unity_greeter-fading-label.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -c -o unity_greeter-fading-label.o `test -f 'fading-label.c' || echo '$(srcdir)/'`fading-label.c

unity_greeter-fading-label.obj: fading-label.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -MT unity_greeter-fading-label.obj -MD -MP -MF $(DEPDIR)/unity_greeter-fading-label.Tpo -c -o unity_greeter-fading-label.obj `if test -f 'fading-label.c'; then $(CYGPATH_W) 'fading-label.c'; else $(CYGPATH_W) '$(srcdir)/fading-label.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/unity_greeter-fading-label.Tpo $(DEPDIR)/unity_greeter-fading-label.Po
#	$(AM_V_CC)source='fading-label.c' object='unity_greeter-fading-label.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -c -o unity_greeter-fading-label.obj `if test -f 'fading-label.c'; then $(CYGPATH_W) 'fading-label.c'; else $(CYGPATH_W) '$(srcdir)/fading-label.c'; fi`

unity_greeter-flat-button.o: flat-button.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -MT unity_greeter-flat-button.o -MD -MP -MF $(DEPDIR)/unity_greeter-flat-button.Tpo -c -o unity_greeter-flat-button.o `test -f 'flat-button.c' || echo '$(srcdir)/'`flat-button.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/unity_greeter-flat-button.Tpo $(DEPDIR)/unity_greeter-flat-button.Po
#	$(AM_V_CC)source='flat-button.c' object='unity_greeter-flat-button.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -c -o unity_greeter-flat-button.o `test -f 'flat-button.c' || echo '$(srcdir)/'`flat-button.c

unity_greeter-flat-button.obj: flat-button.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -MT unity_greeter-flat-button.obj -MD -MP -MF $(DEPDIR)/unity_greeter-flat-button.Tpo -c -o unity_greeter-flat-button.obj `if test -f 'flat-button.c'; then $(CYGPATH_W) 'flat-button.c'; else $(CYGPATH_W) '$(srcdir)/flat-button.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/unity_greeter-flat-button.Tpo $(DEPDIR)/unity_greeter-flat-button.Po
#	$(AM_V_CC)source='flat-button.c' object='unity_greeter-flat-button.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -c -o unity_greeter-flat-button.obj `if test -f 'flat-button.c'; then $(CYGPATH_W) 'flat-button.c'; else $(CYGPATH_W) '$(srcdir)/flat-button.c'; fi`

unity_greeter-greeter-list.o: greeter-list.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -MT unity_greeter-greeter-list.o -MD -MP -MF $(DEPDIR)/unity_greeter-greeter-list.Tpo -c -o unity_greeter-greeter-list.o `test -f 'greeter-list.c' || echo '$(srcdir)/'`greeter-list.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/unity_greeter-greeter-list.Tpo $(DEPDIR)/unity_greeter-greeter-list.Po
#	$(AM_V_CC)source='greeter-list.c' object='unity_greeter-greeter-list.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -c -o unity_greeter-greeter-list.o `test -f 'greeter-list.c' || echo '$(srcdir)/'`greeter-list.c

unity_greeter-greeter-list.obj: greeter-list.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -MT unity_greeter-greeter-list.obj -MD -MP -MF $(DEPDIR)/unity_greeter-greeter-list.Tpo -c -o unity_greeter-greeter-list.obj `if test -f 'greeter-list.c'; then $(CYGPATH_W) 'greeter-list.c'; else $(CYGPATH_W) '$(srcdir)/greeter-list.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/unity_greeter-greeter-list.Tpo $(DEPDIR)/unity_greeter-greeter-list.Po
#	$(AM_V_CC)source='greeter-list.c' object='unity_greeter-greeter-list.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -c -o unity_greeter-greeter-list.obj `if test -f 'greeter-list.c'; then $(CYGPATH_W) 'greeter-list.c'; else $(CYGPATH_W) '$(srcdir)/greeter-list.c'; fi`

unity_greeter-idle-monitor.o: idle-monitor.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -MT unity_greeter-idle-monitor.o -MD -MP -MF $(DEPDIR)/unity_greeter-idle-monitor.Tpo -c -o unity_greeter-idle-monitor.o `test -f 'idle-monitor.c' || echo '$(srcdir)/'`idle-monitor.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/unity_greeter-idle-monitor.Tpo $(DEPDIR)/unity_greeter-idle-monitor.Po
#	$(AM_V_CC)source='idle-monitor.c' object='unity_greeter-idle-monitor.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -c -o unity_greeter-idle-monitor.o `test -f 'idle-monitor.c' || echo '$(srcdir)/'`idle-monitor.c

unity_greeter-idle-monitor.obj: idle-monitor.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -MT unity_greeter-idle-monitor.obj -MD -MP -MF $(DEPDIR)/unity_greeter-idle-monitor.Tpo -c -o unity_greeter-idle-monitor.obj `if test -f 'idle-monitor.c'; then $(CYGPATH_W) 'idle-monitor.c'; else $(CYGPATH_W) '$(srcdir)/idle-monitor.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/unity_greeter-idle-monitor.Tpo $(DEPDIR)/unity_greeter-idle-monitor.Po
#	$(AM_V_CC)source='idle-monitor.c' object='unity_greeter-idle-monitor.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -c -o unity_greeter-idle-monitor.obj `if test -f 'idle-monitor.c'; then $(CYGPATH_W) 'idle-monitor.c'; else $(CYGPATH_W) '$(srcdir)/idle-monitor.c'; fi`

unity_greeter-list-stack.o: list-stack.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -MT unity_greeter-list-stack.o -MD -MP -MF $(DEPDIR)/unity_greeter-list-stack.Tpo -c -o unity_greeter-list-stack.o `test -f 'list-stack.c' || echo '$(srcdir)/'`list-stack.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/unity_greeter-list-stack.Tpo $(DEPDIR)/unity_greeter-list-stack.Po
#	$(AM_V_CC)source='list-stack.c' object='unity_greeter-list-stack.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -c -o unity_greeter-list-stack.o `test -f 'list-stack.c' || echo '$(srcdir)/'`list-stack.c

unity_greeter-list-stack.obj: list-stack.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -MT unity_greeter-list-stack.obj -MD -MP -MF $(DEPDIR)/unity_greeter-list-stack.Tpo -c -o unity_greeter-list-stack.obj `if test -f 'list-stack.c'; then $(CYGPATH_W) 'list-stack.c'; else $(CYGPATH_W) '$(srcdir)/list-stack.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/unity_greeter-list-stack.Tpo $(DEPDIR)/unity_greeter-list-stack.Po
#	$(AM_V_CC)source='list-stack.c' object='unity_greeter-list-stack.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -c -o unity_greeter-list-stack.obj `if test -f 'list-stack.c'; then $(CYGPATH_W) 'list-stack.c'; else $(CYGPATH_W) '$(srcdir)/list-stack.c'; fi`

unity_greeter-main-window.o: main-window.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -MT unity_greeter-main-window.o -MD -MP -MF $(DEPDIR)/unity_greeter-main-window.Tpo -c -o unity_greeter-main-window.o `test -f 'main-window.c' || echo '$(srcdir)/'`main-window.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/unity_greeter-main-window.Tpo $(DEPDIR)/unity_greeter-main-window.Po
#	$(AM_V_CC)source='main-window.c' object='unity_greeter-main-window.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -c -o unity_greeter-main-window.o `test -f 'main-window.c' || echo '$(srcdir)/'`main-window.c

unity_greeter-main-window.obj: main-window.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -MT unity_greeter-main-window.obj -MD -MP -MF $(DEPDIR)/unity_greeter-main-window.Tpo -c -o unity_greeter-main-window.obj `if test -f 'main-window.c'; then $(CYGPATH_W) 'main-window.c'; else $(CYGPATH_W) '$(srcdir)/main-window.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/unity_greeter-main-window.Tpo $(DEPDIR)/unity_greeter-main-window.Po
#	$(AM_V_CC)source='main-window.c' object='unity_greeter-main-window.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -c -o unity_greeter-main-window.obj `if test -f 'main-window.c'; then $(CYGPATH_W) 'main-window.c'; else $(CYGPATH_W) '$(srcdir)/main-window.c'; fi`

unity_greeter-menu.o: menu.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -MT unity_greeter-menu.o -MD -MP -MF $(DEPDIR)/unity_greeter-menu.Tpo -c -o unity_greeter-menu.o `test -f 'menu.c' || echo '$(srcdir)/'`menu.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/unity_greeter-menu.Tpo $(DEPDIR)/unity_greeter-menu.Po
#	$(AM_V_CC)source='menu.c' object='unity_greeter-menu.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -c -o unity_greeter-menu.o `test -f 'menu.c' || echo '$(srcdir)/'`menu.c

unity_greeter-menu.obj: menu.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -MT unity_greeter-menu.obj -MD -MP -MF $(DEPDIR)/unity_greeter-menu.Tpo -c -o unity_greeter-menu.obj `if test -f 'menu.c'; then $(CYGPATH_W) 'menu.c'; else $(CYGPATH_W) '$(srcdir)/menu.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/unity_greeter-menu.Tpo $(DEPDIR)/unity_greeter-menu.Po
#	$(AM_V_CC)source='menu.c' object='unity_greeter-menu.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -c -o unity_greeter-menu.obj `if test -f 'menu.c'; then $(CYGPATH_W) 'menu.c'; else $(CYGPATH_W) '$(srcdir)/menu.c'; fi`

unity_greeter-menubar.o: menubar.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -MT unity_greeter-menubar.o -MD -MP -MF $(DEPDIR)/unity_greeter-menubar.Tpo -c -o unity_greeter-menubar.o `test -f 'menubar.c' || echo '$(srcdir)/'`menubar.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/unity_greeter-menubar.Tpo $(DEPDIR)/unity_greeter-menubar.Po
#	$(AM_V_CC)source='menubar.c' object='unity_greeter-menubar.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -c -o unity_greeter-menubar.o `test -f 'menubar.c' || echo '$(srcdir)/'`menubar.c

unity_greeter-menubar.obj: menubar.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -MT unity_greeter-menubar.obj -MD -MP -MF $(DEPDIR)/unity_greeter-menubar.Tpo -c -o unity_greeter-menubar.obj `if test -f 'menubar.c'; then $(CYGPATH_W) 'menubar.c'; else $(CYGPATH_W) '$(srcdir)/menubar.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/unity_greeter-menubar.Tpo $(DEPDIR)/unity_greeter-menubar.Po
#	$(AM_V_CC)source='menubar.c' object='unity_greeter-menubar.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -c -o unity_greeter-menubar.obj `if test -f 'menubar.c'; then $(CYGPATH_W) 'menubar.c'; else $(CYGPATH_W) '$(srcdir)/menubar.c'; fi`

unity_greeter-prompt-box.o: prompt-box.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -MT unity_greeter-prompt-box.o -MD -MP -MF $(DEPDIR)/unity_greeter-prompt-box.Tpo -c -o unity_greeter-prompt-box.o `test -f 'prompt-box.c' || echo '$(srcdir)/'`prompt-box.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/unity_greeter-prompt-box.Tpo $(DEPDIR)/unity_greeter-prompt-box.Po
#	$(AM_V_CC)source='prompt-box.c' object='unity_greeter-prompt-box.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -c -o unity_greeter-prompt-box.o `test -f 'prompt-box.c' || echo '$(srcdir)/'`prompt-box.c

unity_greeter-prompt-box.obj: prompt-box.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -MT unity_greeter-prompt-box.obj -MD -MP -MF $(DEPDIR)/unity_greeter-prompt-box.Tpo -c -o unity_greeter-prompt-box.obj `if test -f 'prompt-box.c'; then $(CYGPATH_W) 'prompt-box.c'; else $(CYGPATH_W) '$(srcdir)/prompt-box.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/unity_greeter-prompt-box.Tpo $(DEPDIR)/unity_greeter-prompt-box.Po
#	$(AM_V_CC)source='prompt-box.c' object='unity_greeter-prompt-box.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -c -o unity_greeter-prompt-box.obj `if test -f 'prompt-box.c'; then $(CYGPATH_W) 'prompt-box.c'; else $(CYGPATH_W) '$(srcdir)/prompt-box.c'; fi`

unity_greeter-session-list.o: session-list.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -MT unity_greeter-session-list.o -MD -MP -MF $(DEPDIR)/unity_greeter-session-list.Tpo -c -o unity_greeter-session-list.o `test -f 'session-list.c' || echo '$(srcdir)/'`session-list.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/unity_greeter-session-list.Tpo $(DEPDIR)/unity_greeter-session-list.Po
#	$(AM_V_CC)source='session-list.c' object='unity_greeter-session-list.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -c -o unity_greeter-session-list.o `test -f 'session-list.c' || echo '$(srcdir)/'`session-list.c

unity_greeter-session-list.obj: session-list.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -MT unity_greeter-session-list.obj -MD -MP -MF $(DEPDIR)/unity_greeter-session-list.Tpo -c -o unity_greeter-session-list.obj `if test -f 'session-list.c'; then $(CYGPATH_W) 'session-list.c'; else $(CYGPATH_W) '$(srcdir)/session-list.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/unity_greeter-session-list.Tpo $(DEPDIR)/unity_greeter-session-list.Po
#	$(AM_V_CC)source='session-list.c' object='unity_greeter-session-list.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -c -o unity_greeter-session-list.obj `if test -f 'session-list.c'; then $(CYGPATH_W) 'session-list.c'; else $(CYGPATH_W) '$(srcdir)/session-list.c'; fi`

unity_greeter-remote-login-service.o: remote-login-service.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -MT unity_greeter-remote-login-service.o -MD -MP -MF $(DEPDIR)/unity_greeter-remote-login-service.Tpo -c -o unity_greeter-remote-login-service.o `test -f 'remote-login-service.c' || echo '$(srcdir)/'`remote-login-service.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/unity_greeter-remote-login-service.Tpo $(DEPDIR)/unity_greeter-remote-login-service.Po
#	$(AM_V_CC)source='remote-login-service.c' object='unity_greeter-remote-login-service.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -c -o unity_greeter-remote-login-service.o `test -f 'remote-login-service.c' || echo '$(srcdir)/'`remote-login-service.c

unity_greeter-remote-login-service.obj: remote-login-service.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -MT unity_greeter-remote-login-service.obj -MD -MP -MF $(DEPDIR)/unity_greeter-remote-login-service.Tpo -c -o unity_greeter-remote-login-service.obj `if test -f 'remote-login-service.c'; then $(CYGPATH_W) 'remote-login-service.c'; else $(CYGPATH_W) '$(srcdir)/remote-login-service.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/unity_greeter-remote-login-service.Tpo $(DEPDIR)/unity_greeter-remote-login-service.Po
#	$(AM_V_CC)source='remote-login-service.c' object='unity_greeter-remote-login-service.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -c -o unity_greeter-remote-login-service.obj `if test -f 'remote-login-service.c'; then $(CYGPATH_W) 'remote-login-service.c'; else $(CYGPATH_W) '$(srcdir)/remote-login-service.c'; fi`

unity_greeter-settings.o: settings.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -MT unity_greeter-settings.o -MD -MP -MF $(DEPDIR)/unity_greeter-settings.Tpo -c -o unity_greeter-settings.o `test -f 'settings.c' || echo '$(srcdir)/'`settings.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/unity_greeter-settings.Tpo $(DEPDIR)/unity_greeter-settings.Po
#	$(AM_V_CC)source='settings.c' object='unity_greeter-settings.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -c -o unity_greeter-settings.o `test -f 'settings.c' || echo '$(srcdir)/'`settings.c

unity_greeter-settings.obj: settings.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -MT unity_greeter-settings.obj -MD -MP -MF $(DEPDIR)/unity_greeter-settings.Tpo -c -o unity_greeter-settings.obj `if test -f 'settings.c'; then $(CYGPATH_W) 'settings.c'; else $(CYGPATH_W) '$(srcdir)/settings.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/unity_greeter-settings.Tpo $(DEPDIR)/unity_greeter-settings.Po
#	$(AM_V_CC)source='settings.c' object='unity_greeter-settings.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -c -o unity_greeter-settings.obj `if test -f 'settings.c'; then $(CYGPATH_W) 'settings.c'; else $(CYGPATH_W) '$(srcdir)/settings.c'; fi`

unity_greeter-settings-daemon.o: settings-daemon.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -MT unity_greeter-settings-daemon.o -MD -MP -MF $(DEPDIR)/unity_greeter-settings-daemon.Tpo -c -o unity_greeter-settings-daemon.o `test -f 'settings-daemon.c' || echo '$(srcdir)/'`settings-daemon.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/unity_greeter-settings-daemon.Tpo $(DEPDIR)/unity_greeter-settings-daemon.Po
#	$(AM_V_CC)source='settings-daemon.c' object='unity_greeter-settings-daemon.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -c -o unity_greeter-settings-daemon.o `test -f 'settings-daemon.c' || echo '$(srcdir)/'`settings-daemon.c

unity_greeter-settings-daemon.obj: settings-daemon.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -MT unity_greeter-settings-daemon.obj -MD -MP -MF $(DEPDIR)/unity_greeter-settings-daemon.Tpo -c -o unity_greeter-settings-daemon.obj `if test -f 'settings-daemon.c'; then $(CYGPATH_W) 'settings-daemon.c'; else $(CYGPATH_W) '$(srcdir)/settings-daemon.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/unity_greeter-settings-daemon.Tpo $(DEPDIR)/unity_greeter-settings-daemon.Po
#	$(AM_V_CC)source='settings-daemon.c' object='unity_greeter-settings-daemon.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -c -o unity_greeter-settings-daemon.obj `if test -f 'settings-daemon.c'; then $(CYGPATH_W) 'settings-daemon.c'; else $(CYGPATH_W) '$(srcdir)/settings-daemon.c'; fi`

unity_greeter-shutdown-dialog.o: shutdown-dialog.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -MT unity_greeter-shutdown-dialog.o -MD -MP -MF $(DEPDIR)/unity_greeter-shutdown-dialog.Tpo -c -o unity_greeter-shutdown-dialog.o `test -f 'shutdown-dialog.c' || echo '$(srcdir)/'`shutdown-dialog.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/unity_greeter-shutdown-dialog.Tpo $(DEPDIR)/unity_greeter-shutdown-dialog.Po
#	$(AM_V_CC)source='shutdown-dialog.c' object='unity_greeter-shutdown-dialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -c -o unity_greeter-shutdown-dialog.o `test -f 'shutdown-dialog.c' || echo '$(srcdir)/'`shutdown-dialog.c

unity_greeter-shutdown-dialog.obj: shutdown-dialog.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -MT unity_greeter-shutdown-dialog.obj -MD -MP -MF $(DEPDIR)/unity_greeter-shutdown-dialog.Tpo -c -o unity_greeter-shutdown-dialog.obj `if test -f 'shutdown-dialog.c'; then $(CYGPATH_W) 'shutdown-dialog.c'; else $(CYGPATH_W) '$(srcdir)/shutdown-dialog.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/unity_greeter-shutdown-dialog.Tpo $(DEPDIR)/unity_greeter-shutdown-dialog.Po
#	$(AM_V_CC)source='shutdown-dialog.c' object='unity_greeter-shutdown-dialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -c -o unity_greeter-shutdown-dialog.obj `if test -f 'shutdown-dialog.c'; then $(CYGPATH_W) 'shutdown-dialog.c'; else $(CYGPATH_W) '$(srcdir)/shutdown-dialog.c'; fi`

unity_greeter-toggle-box.o: toggle-box.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -MT unity_greeter-toggle-box.o -MD -MP -MF $(DEPDIR)/unity_greeter-toggle-box.Tpo -c -o unity_greeter-toggle-box.o `test -f 'toggle-box.c' || echo '$(srcdir)/'`toggle-box.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/unity_greeter-toggle-box.Tpo $(DEPDIR)/unity_greeter-toggle-box.Po
#	$(AM_V_CC)source='toggle-box.c' object='unity_greeter-toggle-box.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -c -o unity_greeter-toggle-box.o `test -f 'toggle-box.c' || echo '$(srcdir)/'`toggle-box.c

unity_greeter-toggle-box.obj: toggle-box.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -MT unity_greeter-toggle-box.obj -MD -MP -MF $(DEPDIR)/unity_greeter-toggle-box.Tpo -c -o unity_greeter-toggle-box.obj `if test -f 'toggle-box.c'; then $(CYGPATH_W) 'toggle-box.c'; else $(CYGPATH_W) '$(srcdir)/toggle-box.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/unity_greeter-toggle-box.Tpo $(DEPDIR)/unity_greeter-toggle-box.Po
#	$(AM_V_CC)source='toggle-box.c' object='unity_greeter-toggle-box.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -c -o unity_greeter-toggle-box.obj `if test -f 'toggle-box.c'; then $(CYGPATH_W) 'toggle-box.c'; else $(CYGPATH_W) '$(srcdir)/toggle-box.c'; fi`

unity_greeter-unity-greeter.o: unity-greeter.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -MT unity_greeter-unity-greeter.o -MD -MP -MF $(DEPDIR)/unity_greeter-unity-greeter.Tpo -c -o unity_greeter-unity-greeter.o `test -f 'unity-greeter.c' || echo '$(srcdir)/'`unity-greeter.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/unity_greeter-unity-greeter.Tpo $(DEPDIR)/unity_greeter-unity-greeter.Po
#	$(AM_V_CC)source='unity-greeter.c' object='unity_greeter-unity-greeter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -c -o unity_greeter-unity-greeter.o `test -f 'unity-greeter.c' || echo '$(srcdir)/'`unity-greeter.c

unity_greeter-unity-greeter.obj: unity-greeter.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -MT unity_greeter-unity-greeter.obj -MD -MP -MF $(DEPDIR)/unity_greeter-unity-greeter.Tpo -c -o unity_greeter-unity-greeter.obj `if test -f 'unity-greeter.c'; then $(CYGPATH_W) 'unity-greeter.c'; else $(CYGPATH_W) '$(srcdir)/unity-greeter.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/unity_greeter-unity-greeter.Tpo $(DEPDIR)/unity_greeter-unity-greeter.Po
#	$(AM_V_CC)source='unity-greeter.c' object='unity_greeter-unity-greeter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -c -o unity_greeter-unity-greeter.obj `if test -f 'unity-greeter.c'; then $(CYGPATH_W) 'unity-greeter.c'; else $(CYGPATH_W) '$(srcdir)/unity-greeter.c'; fi`

unity_greeter-user-list.o: user-list.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -MT unity_greeter-user-list.o -MD -MP -MF $(DEPDIR)/unity_greeter-user-list.Tpo -c -o unity_greeter-user-list.o `test -f 'user-list.c' || echo '$(srcdir)/'`user-list.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/unity_greeter-user-list.Tpo $(DEPDIR)/unity_greeter-user-list.Po
#	$(AM_V_CC)source='user-list.c' object='unity_greeter-user-list.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -c -o unity_greeter-user-list.o `test -f 'user-list.c' || echo '$(srcdir)/'`user-list.c

unity_greeter-user-list.obj: user-list.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -MT unity_greeter-user-list.obj -MD -MP -MF $(DEPDIR)/unity_greeter-user-list.Tpo -c -o unity_greeter-user-list.obj `if test -f 'user-list.c'; then $(CYGPATH_W) 'user-list.c'; else $(CYGPATH_W) '$(srcdir)/user-list.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/unity_greeter-user-list.Tpo $(DEPDIR)/unity_greeter-user-list.Po
#	$(AM_V_CC)source='user-list.c' object='unity_greeter-user-list.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -c -o unity_greeter-user-list.obj `if test -f 'user-list.c'; then $(CYGPATH_W) 'user-list.c'; else $(CYGPATH_W) '$(srcdir)/user-list.c'; fi`

unity_greeter-user-prompt-box.o: user-prompt-box.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -MT unity_greeter-user-prompt-box.o -MD -MP -MF $(DEPDIR)/unity_greeter-user-prompt-box.Tpo -c -o unity_greeter-user-prompt-box.o `test -f 'user-prompt-box.c' || echo '$(srcdir)/'`user-prompt-box.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/unity_greeter-user-prompt-box.Tpo $(DEPDIR)/unity_greeter-user-prompt-box.Po
#	$(AM_V_CC)source='user-prompt-box.c' object='unity_greeter-user-prompt-box.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -c -o unity_greeter-user-prompt-box.o `test -f 'user-prompt-box.c' || echo '$(srcdir)/'`user-prompt-box.c

unity_greeter-user-prompt-box.obj: user-prompt-box.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -MT unity_greeter-user-prompt-box.obj -MD -MP -MF $(DEPDIR)/unity_greeter-user-prompt-box.Tpo -c -o unity_greeter-user-prompt-box.obj `if test -f 'user-prompt-box.c'; then $(CYGPATH_W) 'user-prompt-box.c'; else $(CYGPATH_W) '$(srcdir)/user-prompt-box.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/unity_greeter-user-prompt-box.Tpo $(DEPDIR)/unity_greeter-user-prompt-box.Po
#	$(AM_V_CC)source='user-prompt-box.c' object='unity_greeter-user-prompt-box.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(unity_greeter_CFLAGS) $(CFLAGS) -c -o unity_greeter-user-prompt-box.obj `if test -f 'user-prompt-box.c'; then $(CYGPATH_W) 'user-prompt-box.c'; else $(CYGPATH_W) '$(srcdir)/user-prompt-box.c'; fi`
$(srcdir)/logo-generator.c: $(srcdir)/logo_generator_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/logo_generator_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/logo_generator_vala.stamp; \
	fi
$(srcdir)/logo_generator_vala.stamp: logo-generator.vala
	$(AM_V_at)rm -f $@ && echo stamp > $@-t
	$(AM_V_VALAC)$(am__cd) $(srcdir) && $(VALAC) $(logo_generator_VALAFLAGS) $(VALAFLAGS) -C logo-generator.vala
	$(AM_V_at)mv -f $@-t $@
$(srcdir)/animate-timer.c: $(srcdir)/unity_greeter_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/unity_greeter_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/unity_greeter_vala.stamp; \
	fi
$(srcdir)/background.c: $(srcdir)/unity_greeter_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/unity_greeter_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/unity_greeter_vala.stamp; \
	fi
$(srcdir)/cached-image.c: $(srcdir)/unity_greeter_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/unity_greeter_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/unity_greeter_vala.stamp; \
	fi
$(srcdir)/cairo-utils.c: $(srcdir)/unity_greeter_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/unity_greeter_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/unity_greeter_vala.stamp; \
	fi
$(srcdir)/email-autocompleter.c: $(srcdir)/unity_greeter_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/unity_greeter_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/unity_greeter_vala.stamp; \
	fi
$(srcdir)/dash-box.c: $(srcdir)/unity_greeter_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/unity_greeter_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/unity_greeter_vala.stamp; \
	fi
$(srcdir)/dash-button.c: $(srcdir)/unity_greeter_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/unity_greeter_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/unity_greeter_vala.stamp; \
	fi
$(srcdir)/dash-entry.c: $(srcdir)/unity_greeter_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/unity_greeter_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/unity_greeter_vala.stamp; \
	fi
$(srcdir)/fadable.c: $(srcdir)/unity_greeter_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/unity_greeter_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/unity_greeter_vala.stamp; \
	fi
$(srcdir)/fadable-box.c: $(srcdir)/unity_greeter_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/unity_greeter_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/unity_greeter_vala.stamp; \
	fi
$(srcdir)/fading-label.c: $(srcdir)/unity_greeter_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/unity_greeter_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/unity_greeter_vala.stamp; \
	fi
$(srcdir)/flat-button.c: $(srcdir)/unity_greeter_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/unity_greeter_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/unity_greeter_vala.stamp; \
	fi
$(srcdir)/greeter-list.c: $(srcdir)/unity_greeter_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/unity_greeter_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/unity_greeter_vala.stamp; \
	fi
$(srcdir)/idle-monitor.c: $(srcdir)/unity_greeter_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/unity_greeter_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/unity_greeter_vala.stamp; \
	fi
$(srcdir)/list-stack.c: $(srcdir)/unity_greeter_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/unity_greeter_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/unity_greeter_vala.stamp; \
	fi
$(srcdir)/main-window.c: $(srcdir)/unity_greeter_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/unity_greeter_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/unity_greeter_vala.stamp; \
	fi
$(srcdir)/menu.c: $(srcdir)/unity_greeter_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/unity_greeter_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/unity_greeter_vala.stamp; \
	fi
$(srcdir)/menubar.c: $(srcdir)/unity_greeter_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/unity_greeter_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/unity_greeter_vala.stamp; \
	fi
$(srcdir)/prompt-box.c: $(srcdir)/unity_greeter_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/unity_greeter_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/unity_greeter_vala.stamp; \
	fi
$(srcdir)/session-list.c: $(srcdir)/unity_greeter_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/unity_greeter_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/unity_greeter_vala.stamp; \
	fi
$(srcdir)/remote-login-service.c: $(srcdir)/unity_greeter_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/unity_greeter_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/unity_greeter_vala.stamp; \
	fi
$(srcdir)/settings.c: $(srcdir)/unity_greeter_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/unity_greeter_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/unity_greeter_vala.stamp; \
	fi
$(srcdir)/settings-daemon.c: $(srcdir)/unity_greeter_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/unity_greeter_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/unity_greeter_vala.stamp; \
	fi
$(srcdir)/shutdown-dialog.c: $(srcdir)/unity_greeter_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/unity_greeter_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/unity_greeter_vala.stamp; \
	fi
$(srcdir)/toggle-box.c: $(srcdir)/unity_greeter_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/unity_greeter_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/unity_greeter_vala.stamp; \
	fi
$(srcdir)/unity-greeter.c: $(srcdir)/unity_greeter_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/unity_greeter_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/unity_greeter_vala.stamp; \
	fi
$(srcdir)/user-list.c: $(srcdir)/unity_greeter_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/unity_greeter_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/unity_greeter_vala.stamp; \
	fi
$(srcdir)/user-prompt-box.c: $(srcdir)/unity_greeter_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/unity_greeter_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/unity_greeter_vala.stamp; \
	fi
$(srcdir)/unity_greeter_vala.stamp: config.vapi fixes.vapi indicator.vapi xsync.vapi animate-timer.vala background.vala cached-image.vala cairo-utils.vala email-autocompleter.vala dash-box.vala dash-button.vala dash-entry.vala fadable.vala fadable-box.vala fading-label.vala flat-button.vala greeter-list.vala idle-monitor.vala list-stack.vala main-window.vala menu.vala menubar.vala prompt-box.vala session-list.vala remote-login-service.vala settings.vala settings-daemon.vala shutdown-dialog.vala toggle-box.vala unity-greeter.vala user-list.vala user-prompt-box.vala
	$(AM_V_at)rm -f $@ && echo stamp > $@-t
	$(AM_V_VALAC)$(am__cd) $(srcdir) && $(VALAC) $(unity_greeter_VALAFLAGS) $(VALAFLAGS) -C config.vapi fixes.vapi indicator.vapi xsync.vapi animate-timer.vala background.vala cached-image.vala cairo-utils.vala email-autocompleter.vala dash-box.vala dash-button.vala dash-entry.vala fadable.vala fadable-box.vala fading-label.vala flat-button.vala greeter-list.vala idle-monitor.vala list-stack.vala main-window.vala menu.vala menubar.vala prompt-box.vala session-list.vala remote-login-service.vala settings.vala settings-daemon.vala shutdown-dialog.vala toggle-box.vala unity-greeter.vala user-list.vala user-prompt-box.vala
	$(AM_V_at)mv -f $@-t $@

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(sbindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-rm -f $(srcdir)/animate-timer.c
	-rm -f $(srcdir)/background.c
	-rm -f $(srcdir)/cached-image.c
	-rm -f $(srcdir)/cairo-utils.c
	-rm -f $(srcdir)/dash-box.c
	-rm -f $(srcdir)/dash-button.c
	-rm -f $(srcdir)/dash-entry.c
	-rm -f $(srcdir)/email-autocompleter.c
	-rm -f $(srcdir)/fadable-box.c
	-rm -f $(srcdir)/fadable.c
	-rm -f $(srcdir)/fading-label.c
	-rm -f $(srcdir)/flat-button.c
	-rm -f $(srcdir)/greeter-list.c
	-rm -f $(srcdir)/idle-monitor.c
	-rm -f $(srcdir)/list-stack.c
	-rm -f $(srcdir)/logo-generator.c
	-rm -f $(srcdir)/logo_generator_vala.stamp
	-rm -f $(srcdir)/main-window.c
	-rm -f $(srcdir)/menu.c
	-rm -f $(srcdir)/menubar.c
	-rm -f $(srcdir)/prompt-box.c
	-rm -f $(srcdir)/remote-login-service.c
	-rm -f $(srcdir)/session-list.c
	-rm -f $(srcdir)/settings-daemon.c
	-rm -f $(srcdir)/settings.c
	-rm -f $(srcdir)/shutdown-dialog.c
	-rm -f $(srcdir)/toggle-box.c
	-rm -f $(srcdir)/unity-greeter.c
	-rm -f $(srcdir)/unity_greeter_vala.stamp
	-rm -f $(srcdir)/user-list.c
	-rm -f $(srcdir)/user-prompt-box.c
	-rm -f animate-timer.c
	-rm -f background.c
	-rm -f cached-image.c
	-rm -f cairo-utils.c
	-rm -f dash-box.c
	-rm -f dash-button.c
	-rm -f dash-entry.c
	-rm -f email-autocompleter.c
	-rm -f fadable-box.c
	-rm -f fadable.c
	-rm -f fading-label.c
	-rm -f flat-button.c
	-rm -f greeter-list.c
	-rm -f idle-monitor.c
	-rm -f list-stack.c
	-rm -f logo-generator.c
	-rm -f main-window.c
	-rm -f menu.c
	-rm -f menubar.c
	-rm -f prompt-box.c
	-rm -f remote-login-service.c
	-rm -f session-list.c
	-rm -f settings-daemon.c
	-rm -f settings.c
	-rm -f shutdown-dialog.c
	-rm -f toggle-box.c
	-rm -f unity-greeter.c
	-rm -f user-list.c
	-rm -f user-prompt-box.c
clean: clean-am

clean-am: clean-generic clean-noinstPROGRAMS clean-sbinPROGRAMS \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-sbinPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-sbinPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
	clean-noinstPROGRAMS clean-sbinPROGRAMS cscopelist-am ctags \
	ctags-am distclean distclean-compile distclean-generic \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-sbinPROGRAMS install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am uninstall-sbinPROGRAMS

.PRECIOUS: Makefile


unity_greeter_vala.stamp: $(top_srcdir)/config.h

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
